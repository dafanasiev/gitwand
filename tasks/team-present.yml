---
- name: "Check whether {{ team.key }} team exists"
  uri:
    force_basic_auth: yes
    password: "{{ github_token }}"
    status_code:
      - 200
      - 404
    url: '{{ github_api }}/orgs/{{ github_org }}/teams/{{ team.key }}'
    user: "{{ github_user }}"
  register: response

- set_fact:
    team_data: >-
      {{ team.value | combine({ 'name': team.value.name | default(team.key) }) }}

- name: "Get id of {{ team.key }}'s parent"
  when: team.value.parent is defined
  block:
    - uri:
        force_basic_auth: yes
        password: "{{ github_token }}"
        url: '{{ github_api }}/orgs/{{ github_org }}/teams/{{ team.value.parent }}'
        user: "{{ github_user }}"
      register: parent

    - set_fact:
        team_data: >-
          {{ team_data | combine({ 'parent_team_id': parent.json.id }) }}

- name: "Create new {{ team.key }} team"
  when: response.status == 404
  uri:
    body: "{{ team_data | to_json }}"
    body_format: json
    force_basic_auth: yes
    method: POST
    password: "{{ github_token }}"
    status_code: 201
    url: '{{ github_api }}/orgs/{{ github_org }}/teams'
    user: "{{ github_user }}"

- name: "Update existing {{ team.key }} team"
  when: response.status == 200
  uri:
    body: "{{ team_data | to_json }}"
    body_format: json
    force_basic_auth: yes
    method: PATCH
    password: "{{ github_token }}"
    user: "{{ github_user }}"
    url: '{{ github_api }}/orgs/{{ github_org }}/teams/{{ team.key }}'

- name: "Get maintainers of {{ team.key }} team"
  include_tasks: team-members.yml
  vars:
    role: maintainer
    mmbrs_var: team_maintainer
    team_slug: "{{ team.key }}"

- name: "Get ordinary members of {{ team.key }} team"
  include_tasks: team-members.yml
  vars:
    role: member
    mmbrs_var: team_member
    team_slug: "{{ team.key }}"

- name: "Update {{ team.key }}'s maintainers"
  loop: "{{ team.value.maintainer | default([]) }}"
  loop_control:
    loop_var: mmbr
  include_tasks: team-member-present.yml
  vars:
    role: maintainer

- name: "Update {{ team.key }}'s ordinary members"
  loop: "{{ team.value.member | default([]) }}"
  loop_control:
    loop_var: mmbr
  include_tasks: team-member-present.yml
  vars:
    role: member

- name: "Remove unspecified members from the {{ team.key }} team"
  loop: >-
    {{    team_maintainer | difference(team.value.maintainer | default([]))  |
    union(team_member     | difference(team.value.member     | default([]))) }}
  loop_control:
    loop_var: mmbr
  include_tasks: team-member-absent.yml
